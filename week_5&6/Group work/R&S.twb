<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top R&amp;D Expenditure' datatype='integer' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range max='300' min='1' />
      </column>
      <column caption='Top Countries with GDP' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='300'>
        <calculation class='tableau' formula='300' />
        <range max='300' min='1' />
      </column>
      <column caption='Top Science and Research' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='300'>
        <calculation class='tableau' formula='300' />
        <range max='300' min='1' />
      </column>
      <column caption='Bottom Adult Literacy Rate' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
      <column caption='Bottom R&amp;S' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
        <range max='100' min='1' />
      </column>
      <column caption='Bottom GDP' datatype='integer' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
        <range max='100' min='1' />
      </column>
      <column caption='Top GDP' datatype='integer' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='300'>
        <calculation class='tableau' formula='300' />
        <range max='300' min='1' />
      </column>
      <column caption='Top R&amp;S' datatype='integer' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='300'>
        <calculation class='tableau' formula='300' />
        <range max='300' min='1' />
      </column>
      <column caption='top 300 R&amp;S' datatype='integer' name='[Parameter 8]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='300' min='1' />
      </column>
      <column caption='Top_R&amp;S_Years' datatype='integer' name='[Parameter 9]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range max='300' min='1' />
      </column>
    </datasource>
    <datasource caption='Sheet3+ (Multiple Connections)' inline='true' name='federated.0jz6f2w0letiuu190ub3m0415rhs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='internet_usage_wb_data' name='excel-direct.0gisgoa1aj16h016dqv161ywjw74'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/SMukhia/Desktop/weekly_work/week_5&amp;6/Group work/cleaned/internet_usage_wb_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='GDP Dataset' name='excel-direct.1c0382w1p3k3yq1da42yr07bb9mw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/SMukhia/Desktop/weekly_work/week_5&amp;6/Group work/cleaned/GDP Dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='science_and_research_cleaned' name='excel-direct.1g98r0p13frxad1gbe5l71ro3nqq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/SMukhia/Desktop/weekly_work/week_5&amp;6/Group work/cleaned/research_&amp;_development_cleaned.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='literacy_rate' name='excel-direct.0fyob3a169oufx15ql17f1poizup'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/SMukhia/Desktop/weekly_work/week_5&amp;6/Group work/cleaned/literacy_rate.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='population' name='excel-direct.1jz4c181ezzg6811lch4x151k8u4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/SMukhia/Desktop/weekly_work/week_5&amp;6/Group work/cleaned/population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[science_and_research].[Country Name]' />
                <expression op='[GDP Value].[Country Name]' />
              </expression>
              <expression op='='>
                <expression op='[science_and_research].[Year]' />
                <expression op='[GDP Value].[Year]' />
              </expression>
            </expression>
          </clause>
          <relation connection='excel-direct.1g98r0p13frxad1gbe5l71ro3nqq' name='science_and_research' table='[science_and_research$]' type='table'>
            <columns gridOrigin='A1:C2320:no:A1:C2320:0' header='yes' outcome='2'>
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
              <column datatype='string' name='Country Name' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.1c0382w1p3k3yq1da42yr07bb9mw' name='GDP Value' table='[&apos;GDP Value$&apos;]' type='table'>
            <columns gridOrigin='A1:D12072:no:A1:D12072:0' header='yes' outcome='6'>
              <column datatype='string' name='Country Name' ordinal='0' />
              <column datatype='string' name='Country Code' ordinal='1' />
              <column datatype='date' name='Year' ordinal='2' />
              <column datatype='real' name='GDP Value' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Country Code]' value='[GDP Value].[Country Code]' />
          <map key='[Country Name (GDP Value)]' value='[GDP Value].[Country Name]' />
          <map key='[Country Name]' value='[science_and_research].[Country Name]' />
          <map key='[GDP Value]' value='[GDP Value].[GDP Value]' />
          <map key='[Value]' value='[science_and_research].[Value]' />
          <map key='[Year (GDP Value)]' value='[GDP Value].[Year]' />
          <map key='[Year]' value='[science_and_research].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[science_and_research]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2320:no:A1:C2320:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[science_and_research]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[science_and_research]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[science_and_research]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name (GDP Value)]</local-name>
            <parent-name>[GDP Value]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[GDP Value]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (GDP Value)]</local-name>
            <parent-name>[GDP Value]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP Value]</local-name>
            <parent-name>[GDP Value]</parent-name>
            <remote-alias>GDP Value</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP Value]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D12072:no:A1:D12072:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='R&amp;D Expenditure' datatype='real' name='[Calculation_1083678679757479938]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([GDP Value]*[Value])/100' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name_2' datatype='string' name='[Country Name (GDP Value) (copy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='tableau' formula='[Country Name (GDP Value)]' />
      </column>
      <column datatype='string' name='[Country Name (GDP Value)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='% of R&amp;S' datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year (GDP Value)]' role='dimension' type='quantitative' />
      <column-instance column='[Country Name (GDP Value)]' derivation='None' name='[none:Country Name (GDP Value):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.336538' measure-ordering='alphabetic' measure-percentage='0.291209' parameter-percentage='0.372253' rowDisplayCount='20000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Adult Literacy Rates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jz6f2w0letiuu190ub3m0415rhs].[sum:Adult Literacy Rates:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value (internet access):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name (GDP Value):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country Name (GDP Value)' />
        <field-sort-custom-order field='Country Name (GDP Value) (copy)' />
        <field-sort-custom-order field='Country Code' />
        <field-sort-custom-order field='Year (GDP Value)' />
        <field-sort-custom-order field='GDP Value' />
        <field-sort-custom-order field='Calculation_1083678679656898561' />
        <field-sort-custom-order field='Year (internet access)' />
        <field-sort-custom-order field='Country Name (internet access)' />
        <field-sort-custom-order field='Value (internet access)' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Country Name' />
        <field-sort-custom-order field='Value' />
        <field-sort-custom-order field='Country Name (Sheet1)' />
        <field-sort-custom-order field='Value (Sheet1)' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='%R&amp;D by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tahoma'>% of GDP in R&amp;D </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3+ (Multiple Connections)' name='federated.0jz6f2w0letiuu190ub3m0415rhs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top_R&amp;S_Years' datatype='integer' name='[Parameter 9]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range max='300' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jz6f2w0letiuu190ub3m0415rhs'>
            <column caption='R&amp;D Expenditure' datatype='real' name='[Calculation_1083678679757479938]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([GDP Value]*[Value])/100' />
            </column>
            <column caption='Country Name_2' datatype='string' name='[Country Name (GDP Value) (copy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country Name (GDP Value)]' />
            </column>
            <column datatype='string' name='[Country Name (GDP Value)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP Value]' role='measure' type='quantitative' />
            <column caption='% of R&amp;S' datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1083678679757479938]' derivation='Avg' name='[avg:Calculation_1083678679757479938:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name (GDP Value) (copy)]' derivation='None' name='[none:Country Name (GDP Value) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]'>
            <groupfilter count='[Parameters].[Parameter 9]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name (GDP Value) (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Albania&quot;' function='range' level='[none:Country Name:nk]' to='&quot;American Samoa&quot;' />
              <groupfilter from='&quot;Argentina&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Canada&quot;' />
              <groupfilter from='&quot;Chad&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Denmark&quot;' />
              <groupfilter from='&quot;Ecuador&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter from='&quot;Faroe Islands&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Guatemala&quot;' />
              <groupfilter from='&quot;Honduras&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
              <groupfilter from='&quot;India&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Lithuania&quot;' />
              <groupfilter from='&quot;Luxembourg&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Norway&quot;' />
              <groupfilter from='&quot;Oman&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Portugal&quot;' />
              <groupfilter from='&quot;Puerto Rico&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Switzerland&quot;' />
              <groupfilter from='&quot;Tajikistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zambia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]' member-value='2016' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</column>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]' value='132' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='2.2000000000000002' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 9]' value='Top % GDP in R&amp;D'>
              <formatted-text>
                <run>Top % GDP in R&amp;D</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' />
              <text column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' />
              <lod column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</rows>
        <cols>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{9A733791-A2E7-412E-AE46-AB4D9FAC77DC}' />
    </worksheet>
    <worksheet name='GDP vs S&amp;R_%'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tahoma' fontsize='12'>Average GDP vs Investment in Science and Research (1996-2018)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3+ (Multiple Connections)' name='federated.0jz6f2w0letiuu190ub3m0415rhs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top GDP' datatype='integer' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='300'>
              <calculation class='tableau' formula='300' />
              <range max='300' min='1' />
            </column>
            <column caption='Top R&amp;S' datatype='integer' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='300'>
              <calculation class='tableau' formula='300' />
              <range max='300' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jz6f2w0letiuu190ub3m0415rhs'>
            <column caption='R&amp;D Expenditure' datatype='real' name='[Calculation_1083678679757479938]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([GDP Value]*[Value])/100' />
            </column>
            <column caption='Country Name_2' datatype='string' name='[Country Name (GDP Value) (copy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country Name (GDP Value)]' />
            </column>
            <column datatype='string' name='[Country Name (GDP Value)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP Value]' role='measure' type='quantitative' />
            <column caption='% of R&amp;S' datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1083678679757479938]' derivation='Avg' name='[avg:Calculation_1083678679757479938:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Value]' derivation='Avg' name='[avg:GDP Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name (GDP Value) (copy)]' derivation='None' name='[none:Country Name (GDP Value) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name (GDP Value)]' derivation='None' name='[none:Country Name (GDP Value):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]'>
            <groupfilter count='[Parameters].[Parameter 7]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name (GDP Value) (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name (GDP Value):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;West Bank and Gaza&quot;' />
                <groupfilter function='member' level='[none:Country Name (GDP Value):nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 6]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([GDP Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</column>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</column>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' scope='rows' value='Average GDP ($)' />
            <format attr='title' class='0' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' scope='cols' value='Average % of GDP on R&amp;D' />
            <format attr='title' class='0' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' scope='cols' value='Average Expenditure on R&amp;D ($)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ba9582' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1.058494762' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#b4b4b4' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#c0c0c0' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='stroke-color' id='refline2' value='#c0c0c0' />
            <format attr='stroke-color' value='#8989894b' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#c0c0c0' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='14' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' />
              <size column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' />
              <text column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' />
              <size column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' />
              <text column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='2' />
                <format attr='stroke-color' value='#00000067' />
              </style-rule>
            </style>
          </pane>
          <pane id='16' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' />
              <size column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' />
              <text column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</rows>
        <cols>([federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk] + [federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>13296015616333.334</value>
                <value>2.6291904761904759</value>
                <value>&quot;United States&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>483091711641.25983</value>
                <value>2.7868366666666664</value>
                <value>&quot;Switzerland&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>440846435507.9455</value>
                <value>3.3804847058823526</value>
                <value>&quot;Sweden&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>911202074616.43884</value>
                <value>3.0217380952380952</value>
                <value>&quot;Korea, Rep.&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4850638511304.2822</value>
                <value>3.1087714285714285</value>
                <value>&quot;Japan&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>189412730772.61938</value>
                <value>3.8932061904761901</value>
                <value>&quot;Israel&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2961476412069.5679</value>
                <value>2.5480195238095242</value>
                <value>&quot;Germany&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>204501037856.78812</value>
                <value>3.2109366666666666</value>
                <value>&quot;Finland&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
                  <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>268739374304.28702</value>
                <value>2.561115</value>
                <value>&quot;Denmark&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{B853903B-FF95-4879-99DE-E70DC5F678BF}' />
    </worksheet>
    <worksheet name='R&amp;D by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tahoma'>Total R&amp;D Expenditure ($)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3+ (Multiple Connections)' name='federated.0jz6f2w0letiuu190ub3m0415rhs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top R&amp;D Expenditure' datatype='integer' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range max='300' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jz6f2w0letiuu190ub3m0415rhs'>
            <column caption='R&amp;D Expenditure' datatype='real' name='[Calculation_1083678679757479938]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([GDP Value]*[Value])/100' />
            </column>
            <column caption='Country Name_2' datatype='string' name='[Country Name (GDP Value) (copy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country Name (GDP Value)]' />
            </column>
            <column datatype='string' name='[Country Name (GDP Value)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP Value]' role='measure' type='quantitative' />
            <column caption='% of R&amp;S' datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1083678679757479938]' derivation='Avg' name='[avg:Calculation_1083678679757479938:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name (GDP Value) (copy)]' derivation='None' name='[none:Country Name (GDP Value) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]'>
            <groupfilter count='[Parameters].[Parameter 10]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_1083678679757479938])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Albania&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;American Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Armenia&quot;' />
                  <groupfilter from='&quot;Australia&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter from='&quot;Bolivia&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Chad&quot;' />
                  <groupfilter from='&quot;Chile&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Congo, Dem. Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Cuba&quot;' />
                  <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Denmark&quot;' />
                  <groupfilter from='&quot;Ecuador&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;El Salvador&quot;' />
                  <groupfilter from='&quot;Estonia&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;France&quot;' />
                  <groupfilter from='&quot;Gabon&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Guam&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter from='&quot;Honduras&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Iceland&quot;' />
                  <groupfilter from='&quot;India&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Ireland&quot;' />
                  <groupfilter from='&quot;Israel&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Korea, Rep.&quot;' />
                  <groupfilter from='&quot;Kuwait&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Lao PDR&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter from='&quot;Luxembourg&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter from='&quot;Moldova&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter from='&quot;Panama&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Portugal&quot;' />
                  <groupfilter from='&quot;Puerto Rico&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Russian Federation&quot;' />
                  <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Seychelles&quot;' />
                  <groupfilter from='&quot;Singapore&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;St. Lucia&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter from='&quot;Tajikistan&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Togo&quot;' />
                  <groupfilter from='&quot;Trinidad and Tobago&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;Turkey&quot;' />
                  <groupfilter from='&quot;Uganda&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter from='&quot;Venezuela, RB&quot;' function='range' level='[none:Country Name (GDP Value) (copy):nk]' to='&quot;West Bank and Gaza&quot;' />
                  <groupfilter function='member' level='[none:Country Name (GDP Value) (copy):nk]' member='&quot;Zambia&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]'>
            <groupfilter from='1996' function='range' level='[yr:Year:ok]' to='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]' member-value='2016' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</column>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]</column>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]' value='132' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='50679537770.0' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' />
              <text column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</rows>
        <cols>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{49FC5D74-22D7-4D1F-B322-4D8448881625}' />
    </worksheet>
    <worksheet name='R&amp;S_GDP_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3+ (Multiple Connections)' name='federated.0jz6f2w0letiuu190ub3m0415rhs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jz6f2w0letiuu190ub3m0415rhs'>
            <column datatype='string' name='[Country Name (GDP Value)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP Value]' role='measure' type='quantitative' />
            <column caption='% of R&amp;S' datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[GDP Value]' derivation='Avg' name='[avg:GDP Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name (GDP Value)]' derivation='None' name='[none:Country Name (GDP Value):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[Latitude (generated)]</column>
            <column>[federated.0jz6f2w0letiuu190ub3m0415rhs].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' max='1114086829000.0' min='891922740.74074066' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' />
              <size column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' />
              <text column='[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jz6f2w0letiuu190ub3m0415rhs].[Latitude (generated)]</rows>
        <cols>[federated.0jz6f2w0letiuu190ub3m0415rhs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{51B00A34-E820-4DEC-AFB2-85B6B0659D0C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top R&amp;D Expenditure' datatype='integer' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range max='300' min='1' />
        </column>
        <column caption='Top GDP' datatype='integer' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='300'>
          <calculation class='tableau' formula='300' />
          <range max='300' min='1' />
        </column>
        <column caption='Top R&amp;S' datatype='integer' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='300'>
          <calculation class='tableau' formula='300' />
          <range max='300' min='1' />
        </column>
        <column caption='Top_R&amp;S_Years' datatype='integer' name='[Parameter 9]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range max='300' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='19' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='17' type='layout-basic' w='99034' x='483' y='929'>
              <zone h='52613' id='7' param='horz' type='layout-flow' w='99034' x='483' y='46458'>
                <zone h='52613' id='5' type='layout-basic' w='99034' x='483' y='46458'>
                  <zone h='52613' id='3' name='GDP vs S&amp;R_%' w='88714' x='483' y='46458'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#d4d4d4' />
                    </zone-style>
                  </zone>
                  <zone h='22068' id='10' mode='type_in' param='[Parameters].[Parameter 6]' type='paramctrl' w='10320' x='89197' y='77003'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#e9f3f2' />
                    </zone-style>
                  </zone>
                  <zone h='30545' id='11' mode='type_in' param='[Parameters].[Parameter 7]' type='paramctrl' w='10320' x='89197' y='46458'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ddebf0' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='11229' id='8' name='GDP vs S&amp;R_%' pane-specification-id='15' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' type='color' w='10322' x='89195' y='21462'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffff7f' />
                </zone-style>
              </zone>
              <zone h='45529' id='16' name='R&amp;D by year' w='44356' x='44839' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f3faf9' />
                </zone-style>
              </zone>
              <zone h='13767' id='20' name='R&amp;D by year' pane-specification-id='0' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' type='color' w='10322' x='89195' y='32691'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffff7f' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='20533' id='18' is-fixed='true' param='vert' type='layout-flow' w='10322' x='89195' y='929'>
                <zone custom-title='true' fixed-size='71' h='9175' id='23' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 9]' type='paramctrl' w='10322' x='89195' y='929'>
                  <formatted-text>
                    <run>Top % GDP in R&amp;D</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='10337' id='21' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 10]' type='paramctrl' w='10322' x='89195' y='10104'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#ffff7f' />
                </zone-style>
              </zone>
              <zone h='45529' id='22' name='%R&amp;D by year' w='44356' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f3faf9' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f5ead7' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='63' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='45529' id='22' is-fixed='true' name='%R&amp;D by year' w='44356' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3faf9' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45529' id='16' is-fixed='true' name='R&amp;D by year' w='44356' x='44839' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3faf9' />
                  </zone-style>
                </zone>
                <zone h='13767' id='20' name='R&amp;D by year' pane-specification-id='0' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' type='color' w='10322' x='89195' y='32691'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='71' h='9175' id='23' mode='type_in' param='[Parameters].[Parameter 9]' type='paramctrl' w='10322' x='89195' y='929'>
                  <formatted-text>
                    <run>Top % GDP in R&amp;D</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='10337' id='21' mode='type_in' param='[Parameters].[Parameter 10]' type='paramctrl' w='10322' x='89195' y='10104'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52613' id='3' is-fixed='true' name='GDP vs S&amp;R_%' w='88714' x='483' y='46458'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#d4d4d4' />
                  </zone-style>
                </zone>
                <zone h='11229' id='8' name='GDP vs S&amp;R_%' pane-specification-id='15' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' type='color' w='10322' x='89195' y='21462'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffff7f' />
                  </zone-style>
                </zone>
                <zone h='30545' id='11' mode='type_in' param='[Parameters].[Parameter 7]' type='paramctrl' w='10320' x='89197' y='46458'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ddebf0' />
                  </zone-style>
                </zone>
                <zone h='22068' id='10' mode='type_in' param='[Parameters].[Parameter 6]' type='paramctrl' w='10320' x='89197' y='77003'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e9f3f2' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{27FC911B-DE47-452C-BB2F-A5A29C2D3AFC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='R&amp;S_GDP_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:GDP Value:qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D97B275-CD17-4696-8565-BD323DD934DB}' />
    </window>
    <window class='worksheet' name='GDP vs S&amp;R_%'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='15' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' size='28' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 6]' size='32' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 7]' size='32' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (Sheet1):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year (GDP Value):ok]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{67728CCF-0AFB-4E77-8F6C-B87EDD1DA9CE}' />
    </window>
    <window class='worksheet' name='%R&amp;D by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card custom-title='true' mode='slider' param='[Parameters].[Parameter 9]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Year:nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[tyr:Year (GDP Value):ok]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[tyr:Year (GDP Value):qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0148E28B-1C22-4DDF-9672-D0257C456125}' />
    </window>
    <window class='worksheet' name='R&amp;D by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card pane-specification-id='0' param='[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 10]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Calculation_1083678679757479938:qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[avg:Value:qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value) (copy):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name (GDP Value):nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Country Name:nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[none:Year:nk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[tyr:Year (GDP Value):ok]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[tyr:Year (GDP Value):qk]</field>
            <field>[federated.0jz6f2w0letiuu190ub3m0415rhs].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A5548A4-6509-465F-9510-0C6387833B57}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='%R&amp;D by year' />
        <viewpoint name='GDP vs S&amp;R_%'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='R&amp;D by year' />
      </viewpoints>
      <active id='22' />
      <simple-id uuid='{241F7CF3-A48A-49D7-83A7-AA35A37958DA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%R&amp;D by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP vs S&amp;R_%' width='192'>
      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
      /w8i1VsfpFqicQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='R&amp;D by year' width='192'>
      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
      jp8lLCyEtNQkRsYmGBoeZXTcgtPpxh/4SIzW4/Xy9rtH+Pt/+jnZWWmEh4Wi1Wiw2uwcOHKa
      wvwcoiPDaevswWK1YZ20Y7VNTvk/gvVISohDo/4oEYXb5SEiPBSlQoFGo0alUqFUKlEolDS3
      dXLxajnLF89/pLZqbGolMjyMpKT46c9Kr9+iqDCP8PD7JeqjoyIx3SVZIwhCsG4PuplSqUTm
      42cDBSGR0ejVSlQq4Z5l+V6M0XG7H1/IGfQaBdmZhYx1VRKeNQ+9SnF/pnOlnoWbN2O9eoDW
      ITcF8XdbB1SER0eiVihRAhKjDFnMPB0XjmK0B4UA7rFOpMhsIg0qJpRKEGGkq4/o7B3odSYy
      U+Mo6ewlFQgND0enHUVvCsdg0KPXq/kUX/Y9kGWZsooaXv3aDgIBkf0fngh6gxvbaGrtJCMt
      mQ1rHj5Rnj8Q4Oe/ehezyURTawdtHd3Ex0YT8AcIBERUSiVuj+ee/fvTW9Zx7mIpB4+dwely
      YdDrcDhdvPPeEVYuXcDcglwA9uzaxsmzlzAZg0S2jys6vPbSTkbHLex97wh52RmIosTRU+fY
      umkN6alJyLLM9q3rOXC0mFCzCZ1W+5my6kqVEpczuAmWpY8SYZeWV9LV088re3ZgMn5ycpSZ
      YNLuYO+7h4mJjqS0rJKe3n5CzEZOFV8kPT2FoaFRFAqB5KR40lKTPrUci/WBCTIgPdbM7aYB
      4osiae4cJ3NTHHg+fW+tUChRS14cHgmDJpKEJD1J89ezek4UI8M2BEsc4xfb8YlzmbQ5+Dh5
      WKkNZ/drz/G/f/oGKf/5h59Rs3BCdVYGJuxEOax4/aAJi0cavcikT2TSYkM2QFxGClUNTbiK
      omlq6yNr5Vb8/Q966k9HS3sXCfEx0y/wP/27P0SWZay2ST48dpb1q2cniaJWqfib//RnQSGq
      CSsnzlxk47oVnC65QmX1bXKy0rFYbBgNH3Uct9vNmpWL8fn87DtwjJys9OmOm5aSOH0olCWZ
      b760i5uVdVMH3eDhUJQkmls7SE6MJyIsBI1Gjd3p5Hp5NTuf3UxczEeZIHVaLa+/upsTZy6y
      YF7+Z8o/RkaEM2610dc/xNDo2PQWra2jm1f3PHcfSe1hEWI28bd/8x8AmcGhES5fKWPbU+vZ
      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
    </thumbnail>
    <thumbnail height='192' name='R&amp;S_GDP_map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5hlV3Um/J50c65c1VUdq6NaarWkFkLByLQMn8cwGIztb2wwZjzj8TjO
      gMePx/YMxmAzOINxGDOfMcyA02cQWAQhBAootKRutbql6lwdK92cTz7z49batc+pc2/d213d
      qhJ6n6eeqrr35LP23iu8ay2hWq06iqLAD7Zto1arAQAEQYAsywiHw3AcB4Ig+O7TLRzHQb1e
      hyAICAaDkGXZ9X2z2YRhGOzc/H6O40AURYiiiGAwyP72Q6PRgGVZ13StrzYEQYAgCLBtG7FY
      7Jqf/bXCsiyoqopIJPKqX8u1wHEcyIqiIBgM+n5Zq9UgCAIURYFlWZBlGYFAAJqmQZZlSJLE
      tldVFYqiuD7jB4pt266Hxf+vaRpCoRATYk3TYNs2RFFk2ziOw/alzwVBgK7riEajCAQCvjep
      KAp0XYeqqrBt+2qf1auKRCIBSZJgmiZkWX7Vhc40TTiOg1Ao9Kpex7XAtm1Uq1X4TpuO40DT
      NOi6DkEQEIlEIIoiIpEIbNteJvymaaJer7uE1HEcVKtVGIbBZu1SqYRarYZGowFJkhAOh9n2
      1WqVfS+KIhRFYQOCZnw6Lw0WegntVjCgNVgCgcCyFWa9IBAIsGdNg/7VhizLiEQir/ZlXDUc
      x0Gz2WxN6n4bNBoNaJoGoCVAkiQhGo1CEASUSiWIoohwOMyElGZWXdeZoNHK0Wg0EAwG2Qqi
      aRo7Hi/Itm1DVVUYhgFZlhGLxdj12LbdWq44IW42m0wF6gamaQLAsuuzbRumabLv1xosy0Kl
      UkEsFmur5r0aWAsDsVs4jgPDMCAIAizLgqZpTC32HQCiKCIUCsE0TUQiETiOA0mSUK1WmTBW
      q1VEIhFEIhE2w9LSqGka0+sbjQYURYGqqq4ZndQjXnXRdR0AEAwGXQ+YX20IZIt0Y4+IoohE
      IgFd1xEIBGDbNiRJcu2n6zoajcaaU5PoRVmW1VbNex3t4TiOa0InCIKAUCjkPwBCoRAEQWAC
      Vq1WEY/HmbCR4DSbTbZE02xfLBaZmkQzea1Wg+M4vsYof0xZlqHrOiqVChKJhGvGo1FMAtrt
      zE+gQU1/exEIBCAIwpo1mg3DeH0A9Ahd15ep5uR0Ie3DdwCQgNMgIN0fWJq9CfV63fViaDs6
      RiAQQDQahSRJ0HWdqS62bcOyLOi6vswLZNs26vW6y9YgnY2gaRqi0eiq6vaKoiASiaBara7a
      MVcLuq6ve6/LjYRlWcyDSQiFQi5nC9BGBeJBLsZGo8HckpIkwbIsCIIAwzDY5wRSL6rVKhKJ
      BJt5ye1Jgk2GtmVZSCQSLj3c77jeGyRv1GpiLenZBFmWIYois7H8VMLXsQRyyvCIx+O+zpKu
      pScSiSAYDELTNKZHkz/YsiyEQiG2OpAKxXt5gJbeblkWFEWB4zhM4GnVIBWoW1wPz44kSew+
      1xIikQgsy4Jpmq8PgA4gnZ/XFqLRaFtPYU8SJEkSIpEIDMNArVZjvvpEIgFFUZYtz96TevX2
      WCyGRqPBVKpAIMB0fTKq24G8ONcDpPJ1WoFuJAzDYKri6yrQyuAdGWSftoNrAJDwWZYFy7KY
      /98L8tPzMYJeQAIviqLL3RkIBBAIBGBZFlvyeXuDVCvy4lxPdYU/76sJWlUpdnK9Bv3VYjVY
      AasJ27bZAJAkCfF4vKOcuAZAs9lEo9Fg/+u6ztyNFAXmD3y18D4wumC6UFrie/X0rBbIPbsW
      YgMUq1htg3+1sJaEnwJc9DfRZDrB9UQDgYBrAJA3BljypV/tSyCd3zRNGIaBeDzO3I6qqgJY
      Enje28Fzf24kJEl6VWc3WoEsy2JesrUkbGsR5O8nV2c3E6hLmlcyrqrVKpLJZEdhpOUacAsy
      75MlVUtRFGiaxgTN69XRNA3NZhOO47CljEY48ZPIq7Tas6MgCCxKfaNBqk69XodlWbBte5lD
      4XW4Yds2c6CQxtLNhOGSGhJGwL200d80QIiU5XcRJOCkPnnJbBT0ohmWhJhAHiTDMNjqQ0Yp
      RaIBuAYDgGtanfxA7t9XIyhGKx49v1dLFVwv8MosefK6gWsq5wcAD3JpKoqCcrnMPDe0Lf02
      DAPlchmGYbj0L3KTyrIMx3HY7O09FxnXAJhaRHyfWq3G9qGBQ4MIgMubtBqgleXVUDuIiUsE
      xNfVn5VRrVbZZNVLwJBNmbxfngcR11RVZexQWp5N00Q8Hmf78VwfMpiJShEKhdjsTdRksgNI
      yMmzxF+LLMu+g4V4SuQVWm20ex43AsFgkDkkFEVZc56ftQYKmpIs9aIJsBWA59kQiDBEKg3g
      pkqT3kX6PQ+eEhGJRBjRjOfxA0vEN1ph6Fr4VYVujAdPl67VaqjX68t4H9cCOid/LTcK5PUh
      Ju7r6B5eqsNKYFv6RWAVRUEoFHLpwV7vDE+RAJZWAX72VBTFZTzTIKAfIqIR+IHoVbN4Ml65
      XEa5XGbb6rq+agJLdsqroXrQfdAK+Traw7ZtFrWnwGwvYFuHw2FmgNIPURZUVXUJPs8U5YWN
      9HIAriAWCRMlUfA0aNM0V2Q5mqbpWj0EQYCqqq7BQX+T7bAaYJzxG+x/p1WWf+6vwx+8p7Ad
      47gT2ACQJAmxWIypJLIsMzUjkUiwKC0JP4F/QfV63aUqeS+G9NloNIp4PM7oBpVKpeOFq6rq
      4v/7+efpc9M0UavVUKvVrpnKQM8hHo/f0EFACUJEFHwd7UEBWl5l7gWu9YJ08Vgs5nIrSpIE
      WZZdebykI3sT1vm/vUIqCAJisRib8Ymuyi9jQMsuiMfjzPdtGIYrwkf78P/z5yLuDM0MV4to
      NIpkMsnyG3qBvlDAS+/9TeQfeabn85LqQ1lyvcK7Mr9a8Kqv1wOKorDJGUBPk4au68tzgilJ
      nhcoy7LQbDZdhq3fDOz93M+tym/DC693VaG0Nb+H51V92r1w0zTZdV/NS6DroomhF3+8Waqi
      evwMmtNXej4vZdjRSrCewNuGuq7DNE1UKhWWLXg9QJmJdP5SqdTVILAsC4Kqqk43L5bXw8n/
      3mw2l+mpfBUIoGWVUz6xF9Vq1ZV7zK86uq4zxql3gBD4VWalhPFIJNJzFQPyflWrVQQCASiK
      4gq+dYIgCLAqdUixCJwe1Hi6TqpkEQgE1k31BZIJIlQGAgGXLUhq9vVSJ2mQEeWed7q0u16Z
      Mrr42c4PlARDXhaeJsDv552NKdGdSnvwJ+dHKalB9HACgQBSqRRs22b8bv7YpCKEw+GuktpJ
      mHtNK6SyK5QzDCxFiVeCmOqOMMjP9JZloVqtIhgMIhKJrHk3KLEvRVF0GaTk6rYsC41GA+Fw
      +LpTS0h2yJ3OMwnaybVMF0n042AwyPj4/Ev2y7Lx6vztQA+HlilK6giFQq60Ne9MRzZGPB6H
      ruusNg55qJrNJoLBIAKBAKrValvjHGhFinldsVuQPREOhyFJEtPJv/nNb0KSJOzfvx9Ay24p
      FosYHh7G/Pw8+vv7UalUIIoipqamsH//fuRyOQwPDyOfzyMajQIAnnrqKTzwwAPsfLQiGoaB
      WCy2pgcAqTp84j4NZNu20Ww20Ww2mf2YyWRYAtX14G95EQ6HUavV0Gw22YrA2626rkOmsHsw
      GGSzaKVSYQntFJ0la5tf0trRJvjvZFleRuWl1MhQKIR0Os08No1GA4IguFQmmukpsV5RFCQS
      CQDuoEc4HGZ0CF5l4o9DenUvrsVoNMoGKWWK0fIeiUSQy+Xw7LPPYmRkBK+88gqGhoYwPz+P
      zZs3s2h1MBjE3NwcHnroIezfvx+lUgmRSAS6rvtmntEz8EsyWgugZ1ur1VxGOj1bsrmazSZS
      qRSAlkxduHABkUgE8Xgc0WiUzcy93iOp4ys9H1EUEY/HUSwWUalU2MRJqrYsyy0qhKqqjEZK
      Oi7Vo6FILuny5I7kuRc8iPPTbDaZatJsNllVCVKJgCULnqBpmiv2QF4gsjuISl2v11mdHGKV
      yrKMYDDoig94bZNeZxyKV6TTadeLpRIxRPG46aabYFkWtm/fjv7+fgSDQezatQulUgmmaUJV
      VVy4cAETExNoNpvYunUrSqUSSqWSK5BH57zRbtdewKuu9Kx1Xcfc3Byi0SgymYyvU6JUKmFk
      ZIS9X5qZaVWmGFQ3qNfr0DQN/f39K+5D8ksTt67rKBaLiMfjLWfP7Oys60q90VoAy6rBxWIx
      l8+fBIVqCVEFA9744Ylx9XodhmFAkiSkUimoqopqtcpGKKlGFH+wbdsVKxBFkc0sdH7TNFmO
      Mu8Lpvsgf/7VzKiko5umiWq1uurZaHR84l2tVeEHWkJPHCXysKmqyuo+0TsiOkcwGITjOCgW
      i0in065j8RSXSCTiW/fUbzKjgUeDhuwMPruQnyi9iV6EYDAI2auyeFUIAs3moihCVVXEYjFX
      6FkQBFZOhMhJPB2aQDEFr6pDxyAhBpYisbwHynEclo3G78uXSqRr4B8iBciIY9MLTNNEsVhk
      L2y13ZM0C6511iefakj6PXl9+vv72aqfTqeZbNBq0M6WITmj3Ae/elC0SpIjhd4xlT7hbZBy
      uexymBBrwA+api1PivczbHkfP9XO8QoDLTX1ep3p7JTN5GUzkppFNgUV4aVzkS1C33v1ZL8A
      XL1eh6qqrFAuGfX89RuGgWq1yuoUdStsRBRcTS8GeXiud27zaoEEiooN12o16LqOdDrNnglR
      t2nmBdwxHt4L5/fsVVWFaZpIJpNMZmh/8sKRKm2aJsrlssv7l8/nl72flQKJsvci6WYJ3pej
      aRqKxSJ7cYZhwDRNhMPhZWVNaIagZZCfxXnujneG4AVWURQ2m/OzhXe5JB2PhJ8GgPfeyLYJ
      hUK+K5Qf6CHyqsq1gAzjtTzbe8HbYcTsJX2fB8WI6Icmq2QyiVKpxFzuXm4ZgVbbvr4+9pxt
      22b1pch+8Hok6Vi9Qu7FK0I35ed37xQgohmcbpwulCLF/CDjHw7pml51w4/vQTMqT9+ge/Ob
      YSmA102qoZd2cS0QBGHdCT+BVlqyCRXLgFTOwwpGoEfi7F1SQIqf7Kh8Ph3HjyFAII4YP5jI
      LU825GpBbqfPkqrDsxL9DJJehMJ74zRDd4Kf+uOd/b2CTP5pSrThj8HfA+mvtHS3A5Vqof2u
      BV7q93oBT29oNBrIOAaiTz4IoVYFJAn6TXeitmU3HGe5941UGL6SSDgcZtqD3yTMu68jkQjK
      5TLz5tD1dIOVnrUIuMuSBINBJJNJZDIZJhQUxSP0MiPSjO53g+1umgcfPudjE+3A2wOUUkiu
      N79zkveoE7wBlKuFtyfCSmjHhaKaqtczquoFBbbo3UdOvQixVoEAB4JlIjD1AhRdY8+If17k
      8KA4D3ntUqkU0un0suBkOBxGIBBgRjXVqSLqDK9ieVV37w+fp+6FIAhLKhAZuEQ9oMGQSqVg
      miaLE/AH9/MWeeEVPPKn+wkTf1zalpa/RCLBOB4rgQrwkr5P6hoVR+Wp0u065Hiv61oNVaI2
      dDuI+Mg73TutmGQsxmKxG1YtgtJYC4UCUqkUBNXjVjQNCJYJKK1n6X2PlEZL35ERm8lkWLqs
      pmksL7xarbIBsxLaCTfvxKHPvPu5coJJVaAZl3yp5Ibs5sR+4B8E4F+Ali6YfPbBYBD1eh3h
      cJhdV7eksFAoxPbxVp2g2ahUKrGeZ90cj1JAe1kJSNfvpUoBga6fUk6zh1/GzGcehBgOYuzf
      /wjkgTSroH0jcoZJVSHvmbFxO8TcLIRFGbAGx+BE40gnkujr64OmacuqM/PqDq0CpmkiGAyy
      hCnHcVAoFJbZjdeKdka37D0B+VmJDsHrz1d7Id6TekekdyUhvg8AFnChUix+Akg+fiLs0f68
      EQWAeaRINaLBthJkWUYoFGIGYDdeoGAwyPg+VwMShmKxiPJ8Fi//zIegz+cBAI2TF7D7bz8C
      27FdxuX1Aq0+fNynsWESjqRAnrsAJ5pAc8sexBJJZuOIoujbNov/TdtRoWWiqnhVUu9Eu9KM
      7z2HV3OhzwFA5is50M2SP5WM33Z6vB/81CKvauONL/hB13WWFE56YK1WQzgcXua+JEIWCT59
      R1Fk3jVLcYBeKMY0mPzuxQ80wK4F5AmxbRv6XB56tsi+q02dAywLgtz7ytIrHMdBpVJhsR26
      LxtAfWQThNHNrpWb3j9xt3h4J0HHcZi3p1KpsFXAu123qnY7eHtW8PuIfi/Sm0DCCyzRX9uN
      wk6C0c4Y8X5Ox+GNbzq3X7ubUCjEjPdUKsVmXiq76I0DXE31iF4CZ+3us9fzkc0SHB9CdMcm
      9l3mTbdDDgXb1rxfLfCeH2CpRA0PP3mgbDwveMIlPUta3WOxGEzTRC6XW3EF6PUevH/zv12B
      MP6LqzH6/EZ8tyOXFy5yS5IKRkYz1XukKDPNFl6aM6k+PP+DPw/lNfRCjSY1qNu+Aauht5LK
      IQUD2PO3H0H+occhR8IYfdcDiCYT192dShwboBVlpWdA4FdDophQiyvJNCFcvAgEArDHxmDB
      P/NP13WUSiUXLeZ6e7dcTpn5+XkHwDJ3kTc45V32V3r4dBISXgqhr4RAIIBkMsmOTyS0er3O
      PqdZhGY/yi/wLp1kiPFxAorqkirVC1RVZVTuTlAUZVUbWtO9UMT9eucIOI7DODXE5qV2s97t
      RFFEMplks3uxWIRQrcL+oz+Cc/YsIIqQ7r0Xzvveh4amQdM0Rkpspy5fb/ADTaQPvAJP8K4E
      /Ojx6vX84OFvrtvqZn5GKbnFSPhJZ+SP56ee0MrAp29SEO1qvDKAO1e30z2sdi8vQWjlTnSb
      IOM4DrRmE2qtd1WP4iiUz0uf+d2PILQoDkRRKJVKrQnv8cfhnD4N2DZgmrC+8x2I09MIhUKs
      0Trvo+fPfSPAyyYbADw66epE4KLv4/G4qwwi/5vApxO2gyRJyGQyvjMnDVA/1xoAlifABz+A
      pTzjZDIJYKl+KCXU9Aq+02Q7ENHu1YRaq+Ppd/9nPPbmf4vi6fNd70fGKzXjoPtoRwIkThPt
      Sy5np1LxHhhYfG/E7wKWU2P8cD3UPH5Ay/xI5C+m3Ykdx0EqlWJdG4nbz6ss3gfWDYuym9mN
      dH3mims0GAOVN64cx0EsFkMoFGIvMp1Os/RG/hi9gpLj+Xtea1BzRZRemIKjG6icOo/M9s0r
      7kPeHk3ToDSqCHzt7wFNhXHwh2H3DbOUUh58EgtFy23bhnDgAPDIIwD58gcHgclJNJvNZezX
      eDzOKCnt0I0t2Qt4GZc+8IEPfMjPTdTOIEmlUiw5hiKS7S7a76R+oFaq3doVBFJ9yKgFwGwO
      yiHmO8NTgK0bV2anawDcBD8evdamvB4IJGIIbd2AzBv3Yfxfvxlyl54iitQGn/w6pNPHITRq
      EPPz0Pfchkaj4Vr9BEFY1r2e8suddBryjh0QJAnizp0Q3/teaIuJKYODgy6ZIU9Xt9U2VhOC
      IEDmeT38y+RLEdJ31A/MsqwVa6/0Mqi6pSV7QQ+f1yX545DBy5fI4Pe7WlA+MPGNKFHoehaz
      JXdht+g/+AYAgG6Z0Lvoe0zqrW3bQDQOB4AAANEYm9l5dHJ5OwDMHTsg7NwJYDFRpVTCwMAA
      K3hWLBYZVYXP5Lre8AZflzXJ8/7Pf9ZoNFbU5TvBb9b18y70inYCTQQqKvkIrI5OSUZpMBhk
      jTscp/uuJFcDVVXxjW98A1u3bsX27dtX3P7y5csYGBhAMBhEo9FAuVzGyMjIsu0sy8Lc3BzG
      xsbYtet3fB8UUYKgq9D23+Mb/aaYDMVcvBMmgXJEMpkMC2iSKkslVG5kY3I+qLtsAHjDxjz4
      GbZeryMej6PUqODFC1PYO7EDyaC/Du/1+3qPuxrqQiAQcHHE6WW0Wxno5V3LzEPXTWxVyl24
      XqACXdFoFM888wybTEKhEObn5xGJRJBKpXDlyhUcPHgQc3NzqNfrOH/+PHbv3o18Po+zZ88i
      EomgUCjAMAzs2rULJ06cQDgcxgsvvIADBw6gr68PtiSjeft9bNbnqSk8KNpLK3gsFmOTAV9s
      mcqhUCILOTS8WG1dv5vjMy6QNw7Q7mJIF8yVCvi5v/0tzBTnMZjsxyf+zW9BtkVEo1E2K3QT
      2FiNGZNXDXhPFP3tXb4pzXK1fOrkpr3eGBwcRCKRwJUrV1AsFrF7927s2LGDRWuff/55jIyM
      sOdBkfRCoYBqtYp8Po9arYbt27cjFAphenoad999N15++WUkEgksLCwgk8ksmzjq9ToSiYSv
      k4RWPqA1KVDie6NQwqVHnkZy73Y4qRjjEnUydrulPVwteNkgz6JMF07G5EqIRCKo1WpYqBcw
      U5wHACyUc8ipZUz2Tbi4916Vp1tPUy+gTpZ+6hVvsJJx6jgO49I3m81V0T9vhDcoGAxiz549
      iEajGB0dxfbt2zE0NIRQKIRIJIKBgQFs2bIFV65cgaIo2LhxI3PbTkxMQNd1nD17Fjt37kQm
      k4EkSRgfH8fRo0exefNmnD9/nqlIfPyGoruUi1Eul5fUB1lexnmi93H85z+CwreeQWhiGDv+
      7uMQI+3LnvB6eadSmCuh1/0cx2mVRaHRQKy8dgfjP7MFBx/43x/F4enj2Du+A3/83t+CIsgu
      we9GMMhw5PX0XmBZFgqFAqtu1+k8qVSK1ZShbdPp9Kvut+8GnTxuK4HPfVgJ5N5WFAWpVAqi
      KCKfz7PYD8VbiHvFP3OiTjiOg0P3vx/qxVkIAQW3fuOvgEznMpFEIFzpPr2BWK+KTZ+vBGYL
      zM3NORTSJpqB9wDku/UOClEUMVvOYjjZD8d2q050MURT6LS6kC57tWqEYRgolUptb9yr2vGR
      72AwuKq0hbUCWumAVicdSipfCVTShnfnViqVZc6PSCTCEnX45HU694WHn8DcZ76MzJvvRPgt
      b3BVcfN7T3wcgdCp9IyXFs97HdsFcnmQHDAjuJ0VD4CVuqD6LzzG+9yeBU3TXMV2qUNkp0Rm
      fmbhL7BbKIrCSiN6j9tpUACtGY8qWryWQJMQeVgoTdRbd8cLWZYhAFCvXIJjGFBGxnyfLblM
      qW4qsFQYQZFlqKcuYPT970BzYgCaprkixjz4Gd0rxH4TLv32i/rzx+x0Ln6Clj74wQ9+yPvg
      vNA0DU8//TRSqRRyuRxmZ2fhOA6OHz+Ovr4+PP/884hEIshms3j44YcxNDSEl156CSMjI65K
      YfzFeUEVxmigkWrU7UCgpA3+PlYSfj6Kea2u2LUGWuX49kGCIKwYc7EtC42v/BOs//VnsB/7
      JszcPJRbbmv59j0BLCpJSfYjtcjVckW8/NP/DVapgrF3/QBqtRpbfXrxAvpdJ838XlvSz/7z
      Tqi8rUGQ2xkd9AAdp5WVtHXrVoyPj+O73/0uTpw4ga1bt2Lv3r04evQoisUiHnvsMQwMDGBy
      chILCwu4dOkSMpkMJiYmllVpawcaLNoiazCRSHRMLKGkGcoUu9roLk8FeS2BVNte+ufqxQKc
      h/8FUBcjs08/Dv2+g5DGN7FtqFAyfyxSQwWhxfzd/ZnfgTzUx773a67eySjmNRK6FxpogiAw
      ios35ZW29a4gXhWevpcBt67l57UZHR3Ft771LZaoTIknsViM6YCJRAKqqqJQKGB4eHjF6g3t
      wI/qarXqKlvivVE+A6nXJBd+haDy2eulEUUvoCQWquqgKErPRr9hmihks4jFYkin077vQhCE
      Vr1W3cDF3/5LwLKR+dX3oJLNIhQKMe8RFSRrB1JrXLM0N3Do2um987aA1wVOA8RbocLVcHFm
      Zsbp5H8l6vHVeEocx+mpx5XXWKXfgrBEwyBqNa83VqtVF5eknQ7pBb/8UmHa9Vq0iofjOCyn
      W1EUV1YXFaFtB8s0Uf/yP8L52oOAZQF3vBHOj74XyiJnxy8nmyagmZkZBKtNnHznfwYcB9v/
      4Q9g9MWRSCTYeyiVSszZ0U5t8c7+3tmbzxL0c7XzTTsoiu03sQNoDYB2RkM7f72fR8gvgNar
      v99vP79zDwwMsOWQOCXtXLbt7o03pPhrJq/Qeu3O7jit5JlLly4hFouxOpvUzJwqcncqVmuZ
      JtSZyzCaTUQ3bobAVQan50aNC6loFZXNqZYrkF48Dce2IdyxG7HEkvtTEATkcjn09/e39QTR
      e+XhlQPvu/NePzlf+GPSDxVfpm5EMn8Aflb16l/ei/RzQXkNz06C7PcA/GYEL3h93S9rrdPx
      aTvSYSnLit+WehSs9UrNfnCcFp/fOPIi4v/yL5De+EZI/89bGXuXfPxUet7v/gRBgKwoCI5u
      QKNYRHUx8k+dXgKBgKtrJ0V4qXiVHFBQ37OxVQRMliDUVdQPv4Lo7XuASAipVAqFQsFVKp0X
      UNLvaSbnVxxSZ/zkiv+Md7jQfVcqFVZ+RZZlZDKZ1r3yflM+gMULGe9u8l40/e0n/Py+5GkJ
      BAIIBoPI5/NtX+RKgsfriLIsu6pB+K0E/LU7jsMSaHh4bQ9N09hDWk8QbBvqJ/8MTj4P6/jL
      sO48AGdoqOWdMXW8dPEExjJD2BPb6fLf19QqLNtCSHK7PPlanM1mE8Vi0dXwHI4DxTQghkKg
      J2/bNsvgu/KRv0L277+G4fe/E4O//JPMaUG5HHQcPy+Nn35PsuSXqUjb0bak+tB33p4SAJaX
      R/celB8IftUg/Hz3vNDwyxkxA8mo9ePwrLRSOI7DSGGUosh/52cQeeF3TK8KRyVJ1kOUmCAI
      ApRAEOL4Blj5PISBAYiRaMuTVy7hw//8CXz75aeRiiTwP3/2Y9g9MQlFUXA2fxpfufj3MB0T
      9w4cxLi0BUpAweXiHAJSAIOJPghYKtXCT5TBl56F/PS3YN77Vqi797smS9u2EdmzDcENwwjv
      2gJBENiKQXaBnzDz9+NVffy0Cb/9+N985yHvNjL/jxcuY4FbDdotnd6/vaoKzSzkjeBzTvnf
      ftfACyi51MjS9zsG7deOEeq3dHr/78WrtBbgOA4aahPyf/oVBE6dRnDXLgQT8QWU8p8AACAA
      SURBVFaBY0PDkemXW4OhXsaxC1PYNtxSVY7mD0E1arAF4MXSIWwd24WPPfjnePilJ6BIMn7m
      +38c7z7wg/7N0ssFoFmHUC4AWHJNE98q+fY3IfnWu4GA4ipwQNfb19fX9n6876vb1ZiXU8Mw
      oGkaBgYGlj0rYDElkkYhuct4dYJ3NbWbndtdGC/8vL+W2gx5j0Xn8LrBvIJIdSWp/Y0f/EZ7
      O+Hmzw0spT2uN/UHWCzHGAohtGGD6z5TsQTedtub8XdPfQUb+8fwhslbEYlEYBkG9k+ruGPa
      xKWUiOKtozg5cxYPHf42bMeGZuj4zGP/hB/cdz+igSX3JR1bu+sg5K27YQ6NAWg9u2w2y2yo
      UqPBEoYoF2B8fLw1EIvFtqtsN8+eSihSp1Cehczfuyi2uhp5S7oAgKwoCvOiEOenHW+Hn43b
      zaDtboRUKD6Li9/Gb3Zu58FxHHeTbr9Vqd0AandMoKWikXFWLBavqbThqwFBEJYFDpn6atn4
      uQd+Ej/+xrchHo4hEgzDsixo509j7NgJCA4wXLVRiwTw8oblZDQBLVUikSvAeeU0pLtuhy1J
      sGQF1uhG1/mIEu84DmuqSB4YfoJNp9PI5/OMndoNyMND+5FeT40IKfeb1C1SlYkR7IXMF771
      Bhn4VcA7qtp5e9pdNODP5fADr261Oxf97Wf0tjsmDXJeH+QNLaroUC6Xl6VRrleQ3k4VHPoy
      SyqHqqqwDa1VtQEAHAfzf/55JPYdwL+69X48fKylAv3Ufe+CVlcRL1dR/y+/Dagawu96G/T/
      94dZfIZAwuc3ocmyDNFxYBydgrxhGGJfGqlUinUcotKIfrwsetfZbBYAlnWIDIVCGB4ehuM4
      jNxIiU+d8j7keDyOxuIyRT256IT8xbcTQj8PUDsbwW8bnk3Ig1amTgkU7eD1EfMvoK+vj61G
      lMXFB7+oTDfQEhAaMOtRHQJaA5xfyYidW6/XW7WSBjZA3rUfOHEMpVNzyJ3KQVFfwq994I/x
      E/e8AwG5ZQSXikVIqgZoLfmwc3mEQiGoJ84BM1kE770Nut3ysadSKaY6A25ZanztO8h++E8R
      2LoRo3/7h1AUhREsNU1DuVxGIBBwNdOg90ntdttV5PDyuagOVCfIVDKEmh7zPl6vAUrwuq28
      27YzWHgViLwF9Xod/f39y6J1mqaxWYHcnCsZpX6DlT4j8hb1N6bEdl7dcxyHlWIEwLoTDgwM
      rCtvkB9I9Wg2m657tAQB9bt+AGb/dkz/48fgiAoy734LHMfBeGaJ6RuNRqGEckjeOQnDCcJ6
      z7thNprIfuiT0M5ewoY/+Q04+3cy49dvBQAAMRoGBAFipPWbB+VYt7PrTNNkVSRWCzIAxuUp
      lUowDMOlR3VSM8hmaKfO+OnnXn9tLBZDrVZzJUxTDUpq0JHP513Xwx+Ln7n5z3j1iZbUSqXC
      ZiYK63ub8/nRtil9cr2uApqmoVqtspWPBS7hQDN1hOQgpG2bsP2f/hRCvY6wWgRmp6ENjcOU
      W7Nq/MIpyP//ZxAKOnAkAzXBhBCLIXb7XjilMuThPpQbDdYknSpzl0olxFQLwUAQgbEBhO67
      ExMP/jXEVBKOj4opCIJrJvfKlmmaPUXpV3pnLmUrk8mwfq1eFyaAZbMl/+OHTjM2r57EYjF2
      HJqZqVtNNptl/6/UHM2r+tDfzWYT9XqdqTLtOpPbts08QBQLkCSJJYis1wFAKgV1eSmVSpBC
      Cj7+lb/E8UuncM/OO/BLb3kflICE5NQxSPlWqmtg5gKyN90F1bIQOXmMNcMQLBPhS2dRSg1A
      KBYgN2qof/5LiH3w30FbpLJTKfvB/gFMvf9DcGwLN332IxAkCcJAH/wkg7L1+MQoXoZisRgK
      hQJM03SpSO3AN3dvuw39IQgtrriXVdnJBiCLfCUfbTv7wOuWpG7upKMGAgEMDAygXC4z4fcz
      TDsZ00DL7UrN8uLxOFMBvIObWjHRMUkNu5ZSMGsBgiCwfs3FYhGGYeC75w/j0ZefBgB88dA3
      cO/2O7A/MwqpmAO9IbFcgKLWURNkmINjUJzn2Luy+0YQCYdQzRUAx4G1kIcoCCwCHA4G4UCA
      IAoY/4UfAxyguphc7wWtyKFQqKPdJwgC+vr6kF1kppJa6zgOS8Xk0Wg0MDMzg/n5eRw4cIDZ
      m9RPutlsulcAr9FC4D0mfoktvbhFvcYpryZRfi991mg0mOBTvunQ0BAz1Pnl3Avik9TrdeYK
      o+woOjYZv2RgpVIp17WRrtmON7PeQKvt4OAgAvMB7nMgFokimEjBCQRZ/y9HCUCKxZGQFJSM
      OOpHCoj3BVGaaaD8nT/Cpt//IJL/5T9Af+p5yHffDmWxSK5oWij/9h8heOBWBN/+ALBzApqm
      ISK2KkmTnl+v15FOp5l6SR1JVwLVo+UrVVDZSx62beOrX/0qfuzHfgzPPfccvvvd7+I973kP
      vv71r+O+++7DP/zDP7SnQnh1dfq7Hfy2WUloBEFgqXV+6pQgCOxma7Ua4vE4dF1nS2S5XPbN
      ZSC7hJo6ZzIZAHCVS6SkGzK+OyXevBaEH1ikSizqz9+36078xD3vwJHzL+P+3Xdh18hWWIKA
      xs13IXT2OOA4ULfsxplyFpIkYXRiFGcvqJg5UYYoAIJQQ/3oCZhvvQsD730XSqUSFN5pIiyd
      kwQ0k8m49HdiAvAGut818zKhKAri8ThTScmZQjYdJdVTo8f7778fx44dQ6PRwMTEBM6cOYMN
      Gzbg/Pnz2L9/PwRVVR3K17RtGwsLC74uUN4gXsk/3skb5PcZnc9bpJcCU6qqolqtshcYj8fZ
      isC3CyX7hb8+vsuMZVlIJBIsx5lUA2qy/VoR9E6wLAu5XA4AFvVwB4DAYgGVSgXpZBKCKOKF
      8y/jV//PRyEKEj79H/4HNmQNlJ5+EcrYIMz5HKL33IacbCMjBlD/1iFE7tkHYbivJZyO01pa
      OIcJPXug9c7J5UmqT6VS8VWpea2DEnLo81qtxrpniqKIarUK0zRbXqvFwUYUDJIT4qPpuu5e
      Acj49VNp6ALos25mdz91qF3U1ntOYg0KgsBKolMdGnpQ9BkAVtLbLxKqKApTgwRBQDabZdHK
      16LQd7K56B2LoggBLbnnJ51IJAKzWEFq4waU1SpUXYcgAOVGBbfdfQ8G7roVCwsLaDYaqD9x
      FCNvPoC5T34Bc3/7JfS98ibEPvgeFjtRVZWtumNjY64AlyAIrgR9KqpFFSh4OjovS/yKb1kW
      6zVA/1uWxexIgiiKLBhIwVCa/FwDwK8kSjt/rvfCvGgnWN18TjMACSzv6iyXy+wmgNaMRWX4
      yCbgryscDi+rhEBNwF+rwq+qKuuxy5cjF0URCwsLLHorCK1oKWX86boORVagzZcgSRIeuOVe
      VBs1BOQA9m7YyTpSDgwMtPg+d96EE7/0cWgXZxHdsw2pN78BliDAmMuh8vIZxO8/wPR0v2ft
      1SREUUQ8HkexWESlUmGBLJrJyTFBblJFURjNgcCfh/dmOk6LewS05IgKfblUoHq9zoI/nTw7
      fquD3za84NL/XvKTN2LIG9zhcBjRaBS5XI6N/GKxiMHBQWiaBsMwYFkWyzHl7RA6bjqdvu6d
      FNcSHKfVqYXiKt53RQaot7xNLyDKyPzhl/Hs238RgiLjwMN/BSceRrVaRf2PP4/sP38Tex78
      JOTNY6yLTC/3UK/X0ajVkP/G0wjfugNNpVVjNBAIuJwVtG2hUGBB03C4xXPKZrNIJBIsGmzb
      NiRRhO04yOVyrcy43/zN3/wQr5c1m80V3ZqETtvwx6jVai3ymq5hrpqDqmuwNAO1Wo3l+fLH
      4/cVBMHXM0D7dOKS07Ffq7O9HyzTRPNLX4b14Fcgjo6gEVAQDIVwpTQH27ERDUYQCoXwpS99
      CalUCs8//zyy2SxbbTVNQ6FQQDAYxOzsLKLRKGN3ZrPZltqw2MAw1J9GZOdmDL7tTdAXCjj9
      gT/E0A/dh/COTYjt2gp53w6Uq61uMXzxMWIAqKrKXJNeDcCyLNTmczj587+L5K4tCG3ZgFwu
      h2Aw6CppKQgCSqUSIpEIqtUqy04jo5uK8cqyDFEQcPbnPgw5EYMyPtyyHfgVQNd1ZiCtNAho
      Fm/HHOX3bzQaaOgq/uDrn8azZ44gEgjjl97yU3jDpn3MWOkUMfYek9dl/Qxz4r9QChx/vNc6
      6jMzKP7MzwKNJqR770Hjfe/B4dlX8NEvfxJ9sTT+8N2/gUQwhtOnT7MJj1YK0qElScKOHTvw
      1a9+FZOTk6zpNzke7rnnHqZ2AkD+7AU053PIffk7GPjZH4Ett+j15XIZ8XgcyWTSFd0lZwWw
      5AkMh8OubSheIdWaqB0/C2P7GGxRQLjUQCAexfDu7Wzg8E4QqlmVTqfZPZHa3JfJoHF4Csqm
      UQjJWEvN4h9eL+XlSAi7gSzLeHnuDJ44cQi6aaDUqOCzT34RsWTcxcz0npM3okmAqXMh/x2f
      ryCKIjKZjKuUyveK8AOAnEhC2rUTiEYh3bwXgUAAFwszaBoqFio5qI7BbIByucx4TlRasr+/
      HyMjI7hw4QI2bNjAYjOO42B+ft5VEY56MNdPnkfwpeew0ZhGrJhFf38/xsbGsH37dsRiMciy
      DMMwUK1WcenSJVZsVxEFSNISMbFQKKBYLKJUKgForfKComD6458BSjX09/dj9sN/iflPfcEV
      nKTotqZpSKfTyGQyTCaoJmwsFkO90UD09j2Q0i27JJlMuo1gihZ2I9id6jYCbm9PK41u+faF
      QgH96T5fAfUbDF5vAAk3L+REoPteEnoegWgEwV/7VailEsxoFEFFwQ/vfwtM08Boehib+zZA
      kiQcOHDgqs9BMkK219Cb34DGR78GXLwA4cI0Qrfe5kqyajQa7H2RRyagV6HNnoWUGsKs1ura
      6UeKRCqOm7/8J2zVmPzEf4UYXKpazV8TuUN5UPA2GAyyyhh03bZtLw+EBQIBlmjiV3WrHTpF
      gEVRxO2b9+K+XXfimdOHEQmE8f43/SgiwbCvquM9Lu+a9QvM8fYCLX3fq3Acp+WJCQYhLr7g
      WCCC99/7Y65n3GuPZB4UcAKWIubWT/976CenYN18K3RdZ4EpoqDQJEU9glFrAI4NwbExPDzG
      mhdWKpVlRZIlSUIoFGqtHINhNrD4Rt4Uy+HBl0YBgGQyiUajgWKxyJoyumwAeoDlcpk1PFvJ
      0G1Hn/CqHoIgwLQtXC7MIhaKoi+WAs+I4oWa1+f5z/2oD7Qt6ZGvVd9+t3CcVtGAbDbbttod
      6eS9PCdd110BJy85kFeVwuEwM1J5OgvAResFAdCbgBKE5bTeY6VSwaFDh3DnnXfiyJEjuOmm
      m3D+/HncdNNNuHz5MhYWFmBZFu644w6cOnUK/f39TMgHBgbw4osv4pZbbsHp06eRTqcxODi4
      LOmeJlBqoL5sBaARTQGMTqqOt2H1SpAhY9vwpq6350H6Jl2jFxTE+V4WfmCJTkxRV2+z60Qi
      sUz4+RWWci/IziJBJz2e9Gzvc5YkCYFAAKZpujw+4XCY1V+icwGAIwhwlJBLpX3xxReRzWYZ
      1eHkyZMoFAqMobBp0yYMDw/j8OHDqNVqmJqawsjICJtss9ksDh06hGg0ipmZGQwODiKfzyOd
      TjPqOxnaNDG43KD8zfBtQDsFu5588knWNbJYLEIQBMzMzOC73/0u6+FL7MuHH34Yw8PDOHLk
      CKampmCaJp544gmMjo7i7NmzEEUR3/jGNzAxMYHp6Wkkk0mcOnXK5fLyc5USeNrD9zJkWWaR
      b6IOx2IxRKNR5hggfbjRaLCar6qqQlVVNJtNZJ85gtw/fRPy+DBCqVYJk6nf+2tc/PO/w+C/
      ug9KaHlshZLTvaoIfQ4stdml5JZkMol6vY5SqQRd13H77bfj2WefRS6Xw4YNG9BoNDA5OckG
      7ssvv4zx8XHMzc0hHA6jr68PhmGwPIR4PI7BwUFIkoTBwUEEg0Eml47j4OGHH8bU1BS2bdvW
      co/6PUCaKajabzcoFotQVRUzMzOsCkAymcTnPvc5RKNRjI+Ps+DLxMQEXnjhBZb4Uq1Wcfjw
      YWzevBmhUAhHjx7FqVOncPHiReTzefT19SEejy9ziXo9QZ28Vt+LoGfClzMkejefFcb752m/
      3Kf+HtVDL0EKB5H6Tz8Nx3Gg50rQs0U4ZnvXN60U9E7oJxgMLvVobmrI//O3MPJDb4Kw6AbP
      ZDIYHh4GABw8eJAdc+/eva5zUIfMHTt2AGipXk8//TT27NmDPXv2uLal64jH4ygUCujr68PN
      N98MwzBw8uRJPP744+3ZoNRUmgJjfsIlCAIqlQqOHTuGffv2QRAE5PN51j7zypUrGBwcxNat
      W5HP53HhwgXs2bMHzWYTwWAQ1WoVlUoF09PTrDJApVLB4OAghoeHMTk5CV3XcfnyZezatctF
      sPMOBp789DpaIJdxodCq2WOaJuPCe8E/V8MwkHnnQUjRMPq+/w3MV7/v9z8IU9cRTnRORqGK
      1IA/96t4ZApn/vunEEgnEHvXW1juNe1Dxi1NekRjiMfjy8phiqKI/fv3w6Y+FD7xpGaziYGB
      Ade+V65caRnkXiOYBxme1LjCaw9Q9eEbgXZ5opTt9Lrwu0FVs6kSG9AShnK5zEqJEOPWq07y
      0Vm/atAAWDGBXuE4DgxVQ+HIK0jeNAk5HMKlS5fYBNZsNqHrekvYBQHO7Dyc4ZYuz1eV5lXh
      XC6H0ZeegdCsY+bA/RgaGXUVRCsWi0gkEixHhBwF1Wp15dKIVDYcAOsvSwkMVOeFvznvw/Kb
      sb0PhN+307ZeEC+kV72/WaqgemkWfbu2QnoNtkbSdR21Ws1VNZv32DFPjCji0qVLOHbsGLZv
      387UCrIJqUhCPB6HbdsoFouskptfYTOqONHpfQiCACUURGLLKKp/8zewLl1GbNcuiD/4VhSL
      RZimuVTFzXGARVuDuhP19fUtc4ZQpQ8IAvr7+n2ZxTwhkI6XSqU6rwA8ms0mFhYW2CilJAR+
      5iVyml8/Aa9ge5PpvSmK7Si9hEgksuRT7hEXvvIozn7i/+CNX/oEQuus+NVKoJLx+umLkDIJ
      IBVnz54oAd5I6WOPPYa77roLFy9eZA25i8Uibr75ZqiqipMnT+K2225DsVhkVTXuu+8+Fwmx
      VCoxliXV4Wm3emjNJvK/9Cuwz5xln8kHvx/4t+9HPp9HNBpl75ZkhFzgpVIJmUzGRZokajew
      5Fnnz8v3JKDrpcBc19NfKBRCIpGAaZoYHBxEo9FALpdbFpKORqOo1+vLChytNKvTzXrdc+0C
      a506O3pXJi8Gv/9OJG/bA2HRYGsHb9WI9YBmswm7XMXZ9/wqonfsxcQnf5O5CPv6+treD1Vb
      q9friMfjmJycRD6fZ6zcfD6PhYUF1Ot1LCws4N57710205JWUKvVUKlUWB8H8gxRbX7j9GmX
      8AOA+eRTCL7nJzE8PMy8inw3Gbpuqk/KV7gQhFbijSC0Enu8K0QgEECpVHKVZKcCaF0PADI0
      KWeXkor9BFtRFDbq2i2H3v34gJogCC6fvq7rLkFtN7MQyNjreD/R0IrbhEKhdTcAAADRMAZ/
      5t0I7dgMQWixJSnyCSwnGm7ZsgWhUIipO+Pj42zCowyyvr4+xGIxXLp0Cf39/dA0jWVW+VFn
      vAXGlgmsF5IIcdEeoUzAer2OarXKKkBQRLjRaKCvr4/FhigLsJ0n0C9ngDyVXatA9MCIchqL
      tdh0fCU5PopLKW48t8jbGodmh9BiMrXjtJI5qNAp/6LIpVUsFhlpq51wapqGz372s5AkCXff
      fTfK5TI2bdrErr1UKiEcDiMcDrPE+GAwiOPHj7PBNzQ0hKGhoTWbS+CXBA7AlQcgCALzkfNC
      RxWcDcOAUq5BSCcBWWJCyjN9O3WS6bSql0olVz1+L7Tf/RisFw6z/wPv/hHIP/6jy7fTNFbe
      MCgraDz2DJI/cB8Si/GDWq22TM8n0P8U5yA5A1oDNB6P+wfC2oEElhpMhMNh5mXwLjvk+6VA
      jCzLTLhJ94xGoyzjh35CodCySCUZ46SSUDJ7O8+PZVk4evQoLMtCs9nE1NQUstksTp8+zTwB
      p06dQrVaxZUrV5DL5XDx4kUMDw+j0Wjg9OnTOHnyJPbt27cm+weTwXno0CEMDAzg2LFjLi4M
      z47lm0TQD9XLERoqLr77F4BkHNg8xqjwgUCA2QzMd++sXAeKR7titAT5zgMQ+/sgDg8j8K/f
      BumtP8Dyh13bLbrjWWHdUBByMo7QYm9nSon0xoUIJLPET4rFYi3q9VwW6j9/tXsViAf5VqPR
      KNLpNLPeAbfeztelJOPZMAzmuvR7QJ1UG94tp6pqx2pttFzKsoz+/n5s27aNkbIGBwfZ7Hn5
      8mWUSiXs2LEDp06dQjQaha7ra3bm53Hy5EkMDg7imWeeQTgcxtmzZ7F161bMzMxgeHgY09PT
      2Lx5M3K5HNLpNBYWFjA6OooLFy5gYGAAu3ftxvBHP4jArq0QF1dEHtdKKyFSJf8smbMjEEDi
      h98BSZJQrVY7DiriHgEAJsYgLk5iFGyt1+tM/vy8iILQyiYrFArsONZCDtrhl3pTgQiGYbCC
      uul0mnke+Ito9/Cq1SpSqdSS66pH2LbN2iu1K6vdbX2ZlUDlGdciNE3Do48+yspZhsNhHDhw
      AEeOHIEgCOjv78fw8DBefPFFRCIR7NmzB+fPn8fw8DAKhQLm5+dx3333dRS8YrHoMhx7ATXO
      k2UZ0YUsxGMvQ33zmzBfKGB8fJw1IyT2ca/FxxRFQTAQgLxY7a/ZbDI3rKIojOzGg0o28rbQ
      VQ0AQqPRgGEYSCaTrBGZl4LqNbiAVork0NBQV+Xt/KDrOiqVCnPnfS9C0zTMz8+z9EBFUXD8
      +HHs2rWLqZ0vvvgiJicnmd1kGAai0Sjy+TyGh4eRTqdXHACdHBmdUC6XWaEC+dALsL79HQi/
      9B8hJ5OsBizN4IIgMC5SL5j5j7+BVH8Y/b/3YcjhELN5arUaYrEYnnvuOeTzedx+++0sqjw/
      P4/h4WHWrfKaBoCu6yiXy+jr62MnJ/Ye4G5Vw/ttFUW5Jt4+z14UBGFZDOF7AVT8iSYc4tPz
      MAyDJYpQXiyPlXR5mpmTyWTP3rByubzke3ec1o/POyJnhGmaqFQqy74XdRXB08eh7bgFtuy2
      +dQ//RSsc+eR/PB/hfTUN4CxjchvvgmxeKs38UMPPYRbbrkFU1NTaDabGB8fRzabZQO/0Wjg
      mqRGURSkUilmidP/AJDP51vlLaoVnCmexUIjy9xaxC+6WnhD9Neqq65H8MWeqJOj11AltUCW
      ZdRqNeYF69aQJbZmPp93paH69WXuCEHwFX5gieZOZUoA98AUdQ1ydgaCuTxeE/qFn4P8kf8O
      JzcL8cxxCEefgWO0bDtd11EqlXD8+HEMDg7CMAxMTU3h6NGjrI1TJBK5thWAQCxDmoWbzSbm
      5+dbvlcZ+OiTH8euwR348Z3vZm1rNmzY0PN5TNNkP8BSCuf3IiqVChPKfD7PaMY8yENChp+m
      aajX6z3RR6ikPNUN0jSNJchTMWM/uFaADtB1HX19few9EkWbX3FWotJotQrip46iGU9DHd2E
      aLQ1kGZmZjAxMYFKpYIjR45gaGiIZYUpitKqnbQaA8DvovL5PFt6r9RmEA/GkVBaD4uKVXUz
      c/MqFCXpULyA/N00EHi+y2sZxPUBlsoD+lVd1nUdpmm6quURbYGPsvqB1B++nCHQmtzIxU36
      NpWX5JHP5zuqTbQSkUrc19eHaDQKTdNQqVSuOgDJG+7dRPJXbQAQ+5DQDfUBWEre4FGr1aBp
      Gitzx78o3tdL/vBKsYiFT30BoYlRTLzvneszetslHMfBxYsXXSTCdt4qCpb50Z/Ji+cdOOT/
      VxTFN8OOqvORkDmOw4JVkUiErTYrrQBenz3ZAmRX8nGLbuE4jiunmOqRdjrGqk6Xx48fx5Ur
      VzA7O4vnn39+WQAmn88vuynvQLEsi3Vqp7J9PLxUWEVREA2F0Th+Go2T02zZpwJJfJCul0DO
      WoUgCJiYmEAikUAikUAymWzrquU59l5QaZRsNusqN0+0iXa51V4SoyC0UmgzmQxjjFKB2pXu
      gz8+OU5o4PX6jlj9nxdewcIffJoVUV5pAK1qmJOMXKA1wzz++OOMNkFh9mw2i4WFBYTDYeRy
      Odx9992sQwzgzv2lqm4rQYlGsPtvfg+SLEMJh9i1zMzMIJVKIRKJtIq+NpooP/ciknfuRyCy
      flseAZ31YgI9c0J9ahpyPIrghkEArWptkUgE2WyWlY3vxu3ZruxMJBJBOBxm2Ve9gOwZoqIQ
      26DdO6ISj1S8gYKr1uZxKEDXXT5XdQXg3ZKWZeHYsWPM/VYoFFCr1bCwsIADBw6gUqlg3759
      uHz5MqtJWiwWkcvlUK/XWevMlWDbNmafOgzbtBCItFQlokpQ6JtyUIuPPY3LP/vrKDz2DMoX
      Zxh9e72B6AzdbgsAtqrhxC//D5z73b92fS+KIoaGhpgHrxuh6cS0pVW5VxB3jJLyqb+wd5Cb
      pol8Po9arYZIJIL+/n4MDQ0hnU4jEAggvG0jEg/cwzpO8j9+E8aqrgCUaEy6+caNG2HbNvr6
      +jAy0uo4GIvFWArluXPnsH//flfnFtIvLcvqqlG1IAgYPHAzEwhakoFW7jEfiEvefQec3/8N
      xG7bC61QXrc1Q8n1yRiNHkoygefTC8EAJn/3FyEnl3tt2tHO2537ejgaqNkJ2XukCp07d86l
      IZimyeJOjuPg0UcfhWEYOHjw4FXZfqtmBFNgodttaXlTFIVRa5vNJqrVKvr7+1Gv17Fp06Zl
      NT+vRWD9OCJrFZZpwnEASV6ublSrVSycuwBb1WCnYm3pCqIoMlYmH4gE3G2vqJuKtxy9F+RB
      oshz48Q0zv7O/8SuT/465EzLmLZtG5VKZRkTNPfgt2EUyhj5qbcDPrTlywn0tQAAHz5JREFU
      crnMiGrkWtV1HXNzc8xe8RrOMzMzLH9hamqKuVAHBwfR19eHkydPYuPGjSiXy9i2bRtuvfXW
      Zfe2aisA5Qh0A35pE0WRlU8plUrIlJqQMq0BsjA7B6FcgziQZoG2ZDJ51b7/di+W9M+1tCKU
      L1yB1dTQv2fS9Tld58xv/BkaZy7h5q9+iiW9825ger7e2k7kZKDoOc2kiUTClTvsTT4HwDw9
      rDJ3JITQxDCgLJ2jWCz6tpsqPnkE2mwWwz/xQ4AiuJwTpLKSq5uCd1Q1hC+DySMWi2F6ehrV
      ahWxWAy7du3C9PQ0AoEArly5gmKxiNHRUdx33304deqU73O+LnGAq4HjOK1kG9OCqWpoziwA
      QxnIDQ01RWC1KDdt2rSqQmqaJo786h9Ancnijv/vdxCKtu8VdiPB00l4UE7G7D98Hc3pGYz9
      8r+Btlio1i8WwIMK4CaTyVYrJG7loFXZb3KhaygWi0v5up5rIrQ7hqObgG1BCAVdEyAAxg6g
      wU12CbVFNRZbr9IPuc5VVcWZM2eg6zrGx8cZS5g8jrquY2hoCIlEAo1GA2NjY9dvBbhWEGUV
      ACoz8zAdAUI4hKLaRDKagGQ5UGKrX/nNcRyos9lWvZs1ZBC307PpJRtv2I3E+DBM3WC8eG+z
      cEKz2UStVkMymYR+9DTsDTakWKtrZjQaZe7PUCjEWJQU2ecb2YVCIczPz+PMmTPYvn07+vv7
      l6mlZMPNzs5idHR0yVgPtbKyFPgn1FP1Nrr3hYUFFiSzLIvVFSISHdCKIU1OuldIUp+8DUDa
      5SasmRWABz87lMtlGE0V6rnLiO/Z1jHLyHsMVVXZjXfSa9VqK6oairfPM74RMAyjK0akN7WQ
      JwcSvD52UnVO/fonkL7nVqTfchcqlQrrID80NORi8Jqm6YrDkPH77W9/G/fffz8OHTqEWq2G
      W265BadOncLw8DAqlQqmpqYwNjaGkZERVqaeeoU9+eSTOHjwIE6cOIFbb70VJ0+eRH9/PxtI
      3rTYubk5bNq0ydXSiYc3KOq9727QU0bYjQIfPAsGg2ioKoRYBJJpIxRrX/yWBEFVVRbgkWWZ
      9cvyS9IXBAGCJEEJBl91GoVlWTh16hQOHz7MCv16CW6VSgXNZpMlqlPAigTk7NmzeOyxx1i7
      IComJQitcojy7TvhjPaxkifkYeGjviSMvL+f3NuXL1/G5OQkcrkcdu/ejfPnz6NSqWBmZgbR
      aBSDg4PYvXs3jh07xnK5p6enUSwWMTbWqgI9MzODmZkZhMNhFItFjI+PLxvA5FCh5hz0HXHB
      DMNAvV5nKa29Ro0Ja0vyfSAIrTKNU//tEyg/dQR3fPnPEUn7rwKmaaJYLDJDr7+/n/U8I6Fx
      nFb1YgqkBINBFA69hP79NyHs4yK80Th37hwmJycRCATw1FNPsQGcy+VYicmpqSlMTk5CEAQU
      CgWcO3cODzzwACRJwrZt23D58mVMTEzgi1/8IiYmJhCLxZDNZnHvvfciFovBtm3kcjkkEgmE
      QiFX8FEUBIiNOqxQmC/ezbx8GzduxKOPPopt27YhHA5jaGiIVfOj506tjMLhME6ePMlqtl68
      eBFjY2OIRCKsHwAxib12ARnS1NCcd/2SoK9GH4g1PwCAlk84fdc+yLEIcqUShkMh6JUapESU
      NT+gmpfUvYRcrDyNl6rL8bXtdV1HaM9WBGJrw/ilWfm5555jtez37NmDkZERbNy4EZcuXcId
      d9yB6elpCEKr3MmZM2dw7733LvPC7d27F81mE4cPH8aGDRtcTSrI/Ux/A4tqjuNA+pOPAj/9
      8zCHRtixKPC0adMmbN26lX0+MjKCsbGxZe5qKrJ1yy23rHjPRMUwZ3OwSlUEd20GALZCEN/J
      S4NfDa/dmrQB/EDR5bm5OZhHTuLiH/9v3PHgJyEFA5iZmUE8HncJO18C0AtaLmnWIeMxFotd
      dbGt1YCu67hw4QKmpqawZ88enD59GolEAgMDA6yKQa1WwyuvvIK9e/eyzLhCoYBoNIrJyUlE
      IhFWGpwiq/V6HdlsFvv27YNjmIAAlJ97BcZCAcr37XNRmkVBgJxbgNU3AJuiyIsEuFQq5SqK
      RhWmvRFkMqQ7PUua+UnNkyQJs3/0ORjZAjZ+7FfYeYlsR/ncgUCAUWu8TNWrwboZADyalSpq
      l+aQ3rEZkiTh/PnzrkoSgiCwRGl6EfwLCmhNKI98Gdpb3glTVphKQAaZN7PqRqGbekbtwJez
      9ytnQrP/2V/+WCsanE6iNjWNsY//oivSSiCdv9lsQlVVxhEyDAOlUolVgGvXaIOy1dqxMTVN
      Q61WYy1PRVGEqJuwmxqE1PLrAZYIb1SjqNu4UyesywHghWEYyGazbQ2hcrnMls5IJIKgbUE5
      /BTU2+6GKbQ6k5CbjSi0NAiuxcC6kSA6er1eZ61BKS5ABY4DgQC051+BGAwgtG8H85KFw2EY
      huEqPmYYBiqVCqulQxSFXhLlqQNlu/gERY0pL7gTwY+nYcuyvGr54Ot+AJBaREYS1byxLGup
      G+FisgxVCQbcrjN+NiL6AMUkyuUyBgcH10UFavKAlctlVCoVDA0N9bQ/z8CkcuTege/l+Zum
      yUrkiKLInjvp9c1mkzW45ldo+psmJ1LDvAPAMAx2jlQqxYo1U/rktWLdDwCqTjc3N9fKflIU
      JJ95GrXbbkdjsYgWFWsFwAZAoVBgBaCoZj5VRaOMJzo+CQLfdXytgmyaQqGAM2fOYGZmBps3
      b0a5XMaOHTtabuXF/g2qqroq95FuTQGwWq22jPlZqVRYXVZyy8ZiMdb03LIsVjSZnnmlUmGq
      WSKRYLwemv0bjQZzxcqyzOoEUbHdQCDAIsTBYNDVKf5asS68QJ0Qj8eRz+cRj8dbD8o0IeSy
      SEYiUBY7FRLvpVgssv0opE6qAqkJwWCQqUTAEiWhUqm4ErfXKiiKm8lkMDc3h507dyKbzeLi
      xYu4dOkS9u7diy984Qu4//77USqVEI1G0Wg0cOrUKXzgAx9g7keaDPhnBgDRaJS5lkmQZVnu
      GKCkFcO2bVy5cgXJZBLhcJgNvmQyybrH1+t1xGIxtgrzgq4oSteptN1i3SfQ8gkRAGDKMqz3
      vR/GYjlGekm6rrvKiESjUVSrVbYK8DmqoihidnaWtX3ia5yulOm0lhAOh3H58mXk83mMjo5i
      YmICZ86cwZ133olKpYK9e/ciGAyiVms1oebVD1EUmTqVz+dRKpVQKpVQr9dhGAYrYdmLIUoV
      3sRnp3DmR38NqUiUBSnJWUHGNiW0kO1GM/9qp7uuaxXIsixcvnwZjuO4dEyvHjkzM8MMLWIe
      0nLMP1BK5eOXcO9sEwqF1kUvYgpKVatVVwlJciuSwU9VnGkl5JmcxWKR9YSQJIlFXqn6GlVu
      7vZZkAs1XKij9MRhZH78B1BddKNaszlc+K1PYvjf/QhCd+xh3CVBEBCLxZa1ZV0trFsViJJn
      qNcYBcG8xir5mCkaGQgE2IrhfaArVaojvZenEq9VUF1/v8oP3vsktY6fDOg+44EQLv72XyJz
      8A2QD+xiz5DQyzPQdb3lvUmlMLFrC2ZnZ5l6ZOZLqL98BtqlOYQP3MT2SSQS17U85ZoaAL0Q
      miidsfrFb0FOJxH7vttYq1Y+UZyWT55BeC3BE13XGS2BhGE1QvKrDbrvqwVl9Tm1JnIPPw0p
      HsXw9+1nq0C7fF0RAuxaA4gtH3jEOo1EIiywSecK3rQNex/5XxCiITiLn11v4QfW2ADoRYgM
      w2jN7okYpNhSFYHBwUGUSiW2vK/Us6qb6+GrSgBLPnf6PhgMXnUNzbUEbwUNURQhD6Zxx+N/
      A0MRW0UHOHWIjFcegm6g9uxxxN58h+tzKkblOA4GBgbYxJHP51uVPaJRIBqCvXjeVCp1QwoT
      rwsbgKqTecF/5keNJYbhzMxMT1WO6RjtbArvdrQSkPFGK0y7KOlaBRU77gWk1/PwC2g16nU4
      s3k4wxmk02lIksTORXQNyjajahW9Pjv+nN3uuy6mrAsXLuCRRx7B5cuXXZ/zUVpyd16+fNlF
      5+2mOpgX/ADyE35+YNDf+mJWFjWYKxaLLJtpvcA0TXzta1/Dt7/9bRYJ1jQNhw8fhqZpjIJM
      MYJ2FTX8nlk8EoWzUEJ0seQJ0VSItBiPx1lxhE59H9rBcRzU5rKY/udvQm/4t9T1w5pSgdqh
      WCwyleehhx7C+Pg4otEoisUic/Vt3rwZ586dQzQaxdGjR9HX14dyuYwtW7awDuSriW7oEYZh
      sOgzufXW8oqQz+cxPj7OXMCf//znsW/fPhQKBczOzkJRFKZWhsNhhEKhZd3ZCd5VoKFrCNy+
      E8KimmjXmsh97svIvO1NEEcHmNoDtM+GWwmXH3wUJz/0Fwh/6U8x8oZ9Xe2zLgZAIBDAvffe
      C9u2MTg4iP7+fszPz2NhYQGmaWJ6ehqKouDOO+/E448/jh07duDKlStIp9PYvn076vX6ql5P
      L0JMhh8ApNPpNdtwA2j1zn3iiSdgGAbOnj2LvXv3si7ulLQOtBwJt912G1555RUA/iqP9/9w
      OIxarcbiLuZsFvOffwjBTaOIjw6w1bQdb2il+k2O42DDOw8ismUDUnsnu6r3JEnS+rABzp07
      h5deegmTk5Mol8vIZDK4ePEiBgYG2NK8ceNGnDhxApOTkzh//jzGxsagKAoymcyqDoBrIcZF
      IpEVE9dfTTQaDdRqNdb9kRrLUYSc8icoFkC8H7LRKLrrtaGApbZa5JYVBQF2vgwxnYAjLm0X
      Dodd0XZ63p1UrquBJEktSsd6GADEFfGDYRgu7wV9xscC+BaZ14pr8fSs9QFAHSbbgRdCisMQ
      AVFRFNTrdVdl5k7Vp7sFUdnPnTuHZ555Blu2bMGWLVtYfIci/Y1GA+fPn8emTZsQi8WYUf3c
      c88BAG6//XbWV46uMxaLrQ8VyK/ODIFaM/GDgDK/VuMFdIuVYhjenOS1iE4xEj4lkeDlRXlz
      GZ5++mmcOnUKb3/727v2wvHUdB6Uxuo4Dj796U9D0zTs378f8XicERaJtiHLMp588kns2bMH
      iUQCjuPgwQcfxCuvvILbbrsNuq7jHe94B4A1mhTfC6j9KrAkhNT8QFVVNhMAYF3Mq9Uq+6zX
      SKaiKNAtA4IowrE7V2PgP6M6pWvZCF4JVLK+0/fEvxIEAaOjo9A0DclkEn/xF38BQRDw1FNP
      4cqVKyiVSnjkkUdQLBbxj//4j7BtG0ePHsXp06cxODiIz3zmM6jVati5cycEQUClUoGqqpiZ
      mUEsFsOBAwcwMjKCkydPstwAWZaxe/f/be/cYts40zP8ckgOzwcdKFGWRMmkIlmyFB9SpM2m
      tYBFCgSu2wLbYg/wxd4km73J1WKLxS7QXrRAi+1Vgb1ZtL1psSnQIggKLLBpgBa+cBxobUOx
      LK1jmZJSUrIkipR4Hs4MOdML+vt3OCIpNZZNajQPIMC0LBrizD//93+H953B1tYWhoaG8Oqr
      rzLRMJvNhsuXL2NsbAzxeBzj4+P1VovTEAIdBXUR0laoNUQmMSiq1lLrLt2M7YYw9DWFvb09
      bJb38NNf/hzjoRH88O134LI7Gyaqmt3gJPd32gtl5XKZHeibUalU2BAMHfjv37/f8L2JiQnk
      cjmk02lMT0/jwYMHSKVSeO2119jA/fj4OPL5PMrlMm7evAmO41h6mZzpa7UakskkHA4Hxp+Z
      oGslFOk+ICwWCzPcrlQqCAaDpycEOgqXy8X8sDY3NzEQCsHOcahZfiuUq51qIj1M7S7QbCRQ
      +/fUrXjvN/+D7WwKmcIBsmIRAc9vB2yaQYvutN/8x8HlcrF2cuq3unr1KjiOQyaTQSAQgM1m
      Y/MKAHDt2jXWw2Wz2XD9+nUmwKUNm5xO56EBH60Euz7cbdalSiGb9mFkiAXAcRy8Xi/y+Tyi
      0Sj4fBHyw8cQr84yRYFcLscKLF6vF6IossEL7YSTNoOhD208Hg9uXPk61nb/F7HBMUQHR2G1
      tC6y0aSTERxrqFrbDhper1ar4HmeSRoC9RtYlmU2sef1ehv6tSyqivzdZXhmYuA4DtFolH0P
      wKEGx3w+fyKzAYYIgWRZZulQoLFSS09wap7Tqo/RwY5UDKj9VhvXU1pPi94lRQuNAgL1HqGv
      ajTdbeRyOabf2SpkpGGWZt+vVCpsoktRFObXS6FK9UkSD7/zI0T/6j0MfettNpKqh+oqoihi
      YGDguR8uhtiXFUXBp59+ylJe2vYIKuJQC68+ZWq1WhF4Zt6snVklyJF9dXWVvZf+vQ8ODpDJ
      ZNoaR5xmaKCI0D8Qmr1WDwqwCBJ7TbtvLpdDuVxGf38/9vb2mIWrY2IUF/7hL9D71u+1/Bxp
      fJVssE5iOMkQIRBQf8L09vZiaWkJ6XQaU1NTePLkCUKhEMbGxlAoFNgsqby+BXuop6Fll+Zg
      aaSQKBaLCIVCWFtbg6qqTD2BrJ/i8TimpqaQy+XgdrsNEe7o0foC6wfbtTc/FcgAwOZ1A3Yb
      VFv9tSzLEASBzWsoitIo/Wjl4PmDK0CTNm662QVBYJKJJyVlb4gdAAASiQQKhQKSySQAYHd3
      F8PDw9jf32cKa5SL/817f42df/1lQ2+Ox+OBIAhNsxxbW1vgeR67u7uYm5vD3t4eHj16BJ/P
      h+npaWxvbx9qmQaer2jWTdDNp90FALCQhr5oDsPhcIAP+sF73Oy11+vF0NAQi/2p2kwSjYS+
      EqyqKkqlEjKZTIMBC02lPS+G2QHefPNNxGIxbG1t4YsvvkA4HIbX6wXP83jw4AFmZ2eZMsHc
      L/4W1kBjrEpFIOp1pywCpdYCgQDOnTvHDD0ikQjW19fhcDgQiURgt9sbFBYAdExg66Shs1O1
      WmUKD0D9YLu0tITPPvsMN2/eRDqdxujoKJLJJJtGe/jwIcbHx5nYbzKZRDQarUul2+0YGRmp
      D8Q4HEzpTf9kbyYWRq0Zz4shDsHUitwKRVEaHOaBw63O9JpyzpQZ0vf0a//c7LBHbRccxyEU
      Cp3qwhdBbQ/6z9hqtWJ7e5vtELdv38bMzAyCwSDW1tbQ39/PzM1tNhtGRkawsLCA3t5eXLp0
      iT1keJ5nMwLNyGazdeMLVYUKCxRVQW9vb0vNf7qWx+nbMsQOwPN8y6etqtadZ9LpNHp6epp2
      LdIEGcdxKJVKDfnlZts+0e7Qe5qr63oodax31azVavjkk08wOTkJURTZ5zY8PMxGJ4vFIsrl
      MsbHxxvk3Ok6UH9Uu3CR5jsy/3kLwfnfgTXgabu7lvezePKzDxB775vwhQ872mgxzlVqwVHV
      3lKp1KAOQQK7+hYHeq/j/p+dFNl9EVDMTVk0ObEDzsLh3Xffbfrv33jjjbbvR6GU1vGlGZSq
      VhQF/X88j9qzcKndzwg7aTz94FcYujFvLgDC4/GwoRpKY5Ihm/bDpDaKZjf/UeGP9j26XUbx
      /4vFYmFtCNVqFZlffQqoKvjxbzEJlkAgAGl9Cxt/98+I/uX3YX9myE2KHXS4Jal1AEy5r9XD
      goprAFCDChX1tpZWHb6qqsITHcHv3/2AScC3w/ALoCrLwL1fwx0aQNrlZn4C5CxI5wK6wZ02
      O/LlEkRRZMJP+ptd61qoz/pwHHciqsXdiN1uh8PhQK1Ww9D3vgHAwgyuyc2xWhIgpfZRKwuw
      ajzLyJGGpBMJ7UOpGc1C0Hw+z85mgiC0bDEn2RxqfWm20Ay/AORCAcoH/wLL5atw/OmfMTUC
      6h3heZ551Dp4HtkP/xt9334bqgWsp4XCI/3gvbZaTGHU8wzMdDva3L+i+x1px3NejGL23/+e
      5f+pfYIqu7VajbWrA0ebdDudzkPpz7t378LhcMBut2Nra6ve/sLzTNhLEASm/bq5uYl8Po/Z
      2Vl23igWi1hdXcXFixeNvwBsPh+sP/gRyjY7q0iy4ota9x6mD1lRVYS/+ycNhhnU10LQBaOt
      2+v1dpW/cCc4lFh4dvPTU1+rG6r3LT4qVNRnhqiuQErWXq8XOzs7SCQSGBsbQyQSQTKZhN/v
      RyaTQX9/P8bGxrCxsQGr1YoLFy7g0aNHyGQyGBsbM/4CAAB1eASVgwP0+P1YXV1lOX0t2lQw
      fejtLg61UJy1G7/ZYiedJPLjrVar8Hg8EEWx4ean3YPUnqko1u4zJMlG8gpzu93weDzMGrZS
      qbBiGs/zWFpaQiQSwfnz55FIJOD3+7G8vIxQKAS73Y6FhQXmHZzNZo1RB2hHpVJhlWC/349b
      t27BarXi/Pnz2NnZweTkJHZ3d+Hz+bC5uYkrV67g7t27iEQiLK4luZXR0VGEw2GkUilMTEwY
      KtV5XGq1GrLZbENNJZfLsa5bSZLgcrkgiiJLeWq/4j/5GRzhPsz8+HvHFgjQhp602E4Kw19B
      6mOhw1QymUQsFkM2m0U8Hke5XEYsFmN6+gcHB5ifn8edO3fg9XohSRJ8Ph9WV1fh8Xjw5MkT
      RKPRM/fkJ6gJkNKhWkd7WZaZ7qh2MoxQVRX+y1OwBX1s0P446AuRJylRb+gFQDd+NptlW/Hr
      r7+Oubk5LCwsIBgMIhgM4ty5c0ilUggGgxgdHcWdO3dY2y25lAcCAQwPD2NlZQXz8/Md/s06
      B4137u/vw+l0sl3wqHFPeor3fePrAJoPrBz3/z/JhkNDh0CiKDK7IJo4Oips2d/fx+LiIubm
      5jAwMNDwvWw2i1QqhcnJSUOMOD4PqVSqHkM/y4hR7UM7iwHUdwahWIIsS/A9ewi53e6uKRQa
      egegbZq+tEZwrdKVHo8Hs7OzcDqdrIhCP+9wOBCLxbrm4nWSnp4eFv5YLBZkMpkGd/pisQhB
      EOD1euESZHDVGtRA3Ra1mz4/Qy8AoF51bLbDtarsktE2/Z12wN7lcrHu0LMOeXdJkgRVVVmq
      2J/fh2M7ATU6yXaFQq2AnsE+WK3WryR6+yIx/JUkx5dmjWvaai5dFGqGCwQCqFarzA+LVIvP
      YuanGfrDqMViQdDthuejX8D+b/+EwHaStaP39/ezOeBuGxgy/AIAwJzSSY6jJktwbq6jWsjj
      6dOnyGQyyOfzSKVSAACrxYLCf92BB/Vhe5Lc6EYjjE6id4Lcy2ahXpiDGjmPav8A1tbWWMjp
      9/u/kurzi8bQjzNVrbuM7O3tMZ+pRCKBUbkE23/8I9xf+0P4Zn+XXRS6mEomh8Tf/BzRn/4A
      7q9dgtVq7WpR2xcN9evooUEZjuMwNDRU1+v5oz+HBSoqQgVhvi6TQv5eraTiKWXaCQyZBaJD
      a6FQgCRJrNeHJsIcUME/+Ay1qVdR9fc2/BxpXSrZAix+D1TUD8ZGbXA7DsViEQcHB8wZshnV
      arVhh6SJL6AuVUm2SMDh9gaq7HYCQy4AittPArvd3pVb98vk888/Z8Kz9KSmkGZ9fR2Li4uY
      nJyEoii4dOkSnE4nPvzwQ8zNzWF5eRlAvf4iyzICgQA2NzcRiUTw+PFjzMzMIBwOd2wBGPYM
      8NFHH7UdkyQURUEymWRpOz3dbmrxMohEIhAEAbu7u9jY2EA8Hsfi4iJSqRQkScLU1BRUVUU4
      HMbq6iokSUKxWMTy8jLC4TBu3LiB27dvAwBWVlZgs9kgyzL29/dx69atjv5uhjwDZLNZ9PT0
      YH19HfF4HCMjI9jc3GThzfb2Nl555RVUKhUEAgHcv38f165dg9VqxePHjzE4OAhRFPH06VO8
      8847nf51Ok6hUGBKDuQJFgwGce/ePVy8eBEPHz7E5OQkenp6IIoi4vE43nrrLXz55ZeseW56
      eho8z6Ovrw/r6+usxtJqrvdlYcgQ6OOPP0Yul4MsyxgcHEQ0GsXGxga2t7dRLBYxMTEBRVEw
      MzODRCKBZDKJ0dFRKIoCv9+P3d1d5rD+/vvvd/widZqTNqfQ08kzgCF3gNnZWaYCTdo1Kysr
      CAaDuH79OtLpNIaGhuB0OhGLxeB2u9HX18fSeqFQCOFw2HBjjV8VmqF4UXSyNmDIHaBcLqNc
      LkOSpCO1eWw2W9sUp9b21MR4GPLKWq1W1gXaSmRV+28pT21y9jBkFkgUxWPP5po3/tnGkDsA
      0Sq2tFgs6O3tbXCOMTmbGG4B0GGN/Gjb0ckSvEl3YLirrygK85Bq53goiqJh9fxNjo/hFgAp
      mHEc11IVjHSBzOyOieEWADW0kYRfswKOGfqYEIZ7BCqKwoyztSZthN1uZ3IdJiaGWgAU2wP1
      JjZ9F6fD4WA2SSYmgMFCoFqtxnQkm8lnnHUJQ5PDGGoBkIwex3FNMzylUgmFQuGFNnaZnC4M
      tQAAMJUCrc2RllKpZKY/TRiGWgCyLKNcLrcNc0ggy8QEMNghmGg2CUb1gW7TpTHpLIbaAaiv
      R1XVBlluQu/4aGJiqAVARtjVahXFYrHB1TwQCBjGt9fk5DDUAtB6dGm1bGgq7Cj1YvICMDk7
      GGoBAGCmaDzPs4Y3ao1ohaqqEAQBBwcHKBaLL3T8z6S7MNwCoKc8VYElSYIoishms21/jjwA
      ukm52OTFY6gsEPlPeTwelEolOJ1OuFwuSJLUViPopE0XTE4PhtsB6BygfU3GymYF2ESP4RaA
      xWKBw+FgIZAgCMygOZfLMc+wl4l5uO5eDLcAgPpT3+v1wufzMaFcSZKQyWSQSqXY4fhlLQS9
      o7xJ92BIXSCCUpu0C1Aq1JRBMSEMdQjWQ4dbkjZXVdWcBDNpwNALgNBWhE1MtNhauXaYmJwF
      /g+ywkXL2tCuCAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
